model{
  # simple binomial model for repeated Lincoln-Petersen
  # abundance estimation - from Gazey and Staley 1986
  # and adding nesting success model to it with sharing N,
  # and tally count
  
  # Petersen data - multiple sampling within a season and 
  # the model is fit each year separately
  
  # n: Total number of painted turtles
  # mt: the number of painted turtles seen at time t
  # Ct: the total number of turtles seen at time t
  
  # we estimate p = n/N, which is the binomial p, then
  # compute N from n/phat
  
  # Tally - nesting success data
  # for v.8, I ignore renesting intervals and trying to incorporate
  # those that return night after night - here, simply nesting success
  # is used as the probability of a turtle coming to the shore
  
  # for v.9, the detection function is just a constant. results of v.8
  # showed q_beta1, 2, and 3 were pretty much zeros
  
  # for v.10 nesting success is added - observed nesting success is
  # coming from a year-specific beta distribution. 

  # for v.11 proportion of females is included. 
  
  # for v.12 nesting success now has time-independent hyper priors s_alpha[.]
  # and s_beta[.]. Emergence probability is a function of nesting success (s[t])
  # in a inverse-logit with second order polynomial. Also simplified nesting
  # success by removing the number of sections observed - simply binomial
  # with the  number of females and number of clutches. 

  # s: nesting success

  # priors for Tally-nesting success - precision
  q_tau ~ dgamma(0.01, 0.01)
  
  # non-vague prior to help convergence. 
  # peaks at 50, mean is 150. 
  TC_tau ~ dgamma(1.5, 0.01)

  # prior for the slope of detection wrt # sampled sectors
  #TURT_p_beta1 ~ dnorm(0, 0.1)

  # prior for the probability of females coming to nest
  #q_beta0 ~ dnorm(0, 0.1)
  q_beta1 ~ dnorm(0, 0.1)
  q_beta2 ~ dnorm(0, 0.1)
  
  # prior for the proportion of females - time independent
  # very informative prior to help convergence: mean = 0.9
  # variance = 0.01 (alpha=7.2, beta=0.8)
  #p_female ~ dbeta(7.2, 0.8)

  # prior for nest success
  s_alpha ~ dunif(1, 50)
  s_beta ~ dunif(1, 50)

  # inter nesting interval to be a Poisson deviate:
  R ~ dpois(meanR)
  
  # exp(11.6) = 109098
  # exp(12.0) = 162755

  for (t in 1:T){
    # priors for season specific parameters
    N[t] ~ dunif(Nmin[t], 200000)
    
    # ######################################

    #N[t] <- exp(logN[t])
    # Petersen part
    for (i in 1:nt[t]){
      # capture probability
      p[t, i] <- M[t, i]/N[t]
      # likelihood:
      m[t, i] ~ dbin(p[t, i], n[t, i])
    }

    # Nesting success part
    
    # probability of a turtle coming to nest should be a function
    # of nesting success. Higher nesting success means lower
    # emergence. Years with low nesting success means they keep coming
    # back in consecutive days - higher emergence probability (q).
    # q is bound by 1/R and 1.0, R = the number of days between successful laying
    # if q = 1/R when s = 1, rewrite q_beta0 = 1/R - q_beta1 - q_beta2
    q[t] <- ilogit(1/R + q_beta1 *(s[t]-1) + q_beta2 * ((s[t])^2 - 1) + q_e[t])
    q_e[t] ~ dnorm(0, q_tau)
    q_se <- 1/sqrt(q_tau)
    
    # probability of observing N TURT is 
    # affected linearly by the number of sectors observed.
    # The mean number of turtles available for obsevation per
    # night is TURT_true - this is recorded in tally counts
    # the number of observed clutches is a function of how many
    # nesters were observed TURT and nesting success s[t].
    
    # the observed number of turtles is binomial with the total number
    # of females available with the probability of a female coming to nest q[t]
    # This is all females that emerge to the beach - should equal to tally
    # counts if no error. 
    #TURT_female[t] ~ dbin(p_female, round(N[t]))
    TURT_true[t] ~ dbin(q[t], round(N[t]))
    
    # s[t, i] is the nesting success probability
    s[t] ~ dbeta(s_alpha, s_beta) 

    for (i in 1:n_dates[t]){ # days
      
      #p_TURT[t, i] <- ilogit(TURT_p_beta1 * n_sectors[t, i])      
      #TURT[t, i] ~ dbin(p_TURT[t, i], TURT_true[t])
      
      clutches[t, i] ~ dbin(s[t], TURT[t,i])  
    }
      
    # Tally count data:
    # Tally_true is observed with some error on tally count
    # days. Use lognormal to avoid going into negative. Assumed constant
    # sampling errors over time. This may be changed to be affected
    # by the number available - more turtles means more error. 
  
    logTURT_true[t] <- log(TURT_true[t])
    for (j in 1:TC_n[t]){      
      
      # log of Tally count is assumed log-normal distributed with a common
      # variance term:
      TC[t, j] ~ dlnorm(logTURT_true[t], TC_tau)
    }
    
  }
  
}
